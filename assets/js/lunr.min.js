/* Lunr.js v2.3.9 minimal (prebuilt) */!function(){var e=function(t){return new e.Builder(t)};e.version="2.3.9";var t=function(e){this.invertedIndex=e.invertedIndex,this.fieldVectors=e.fieldVectors,this.tokenSet=e.tokenSet,this.fields=e.fields,this.pipeline=e.pipeline};t.prototype.search=function(e){var t=this;var r=e.toLowerCase().split(/\s+/).filter(Boolean);var n=new Map;for(var i=0;i<r.length;i++){var s=r[i];var o=t.invertedIndex[s];if(!o)continue;Object.keys(o).forEach(function(id){var score=o[id];n.set(id,(n.get(id)||0)+score)})}return Array.from(n.entries()).sort((a,b)=>b[1]-a[1]).map(([ref,score])=>({ref,score}))},e.Builder=function(){this.invertedIndex={},this.fieldVectors={},this.fields=[],this.pipeline=[]},e.Builder.prototype.ref=function(e){this._ref=e},e.Builder.prototype.field=function(e){this.fields.push(e)},e.Builder.prototype.add=function(t){var r=this,n=t.id.toString(),i=(t.title+" "+t.body).toLowerCase().split(/\W+/).filter(Boolean);i.forEach(function(e){r.invertedIndex[e]=r.invertedIndex[e]||{},r.invertedIndex[e][n]=(r.invertedIndex[e][n]||0)+1}),r.fieldVectors[n]={title:t.title,body:t.body}},e.Builder.prototype.build=function(){return new t({invertedIndex:this.invertedIndex,fieldVectors:this.fieldVectors,tokenSet:null,fields:this.fields,pipeline:this.pipeline})},window.lunr=e}();